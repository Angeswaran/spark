package com.humira.constants

object DataQualityConstants {
  final val DRIVERDATAQUALITY = "DataQuality"
  final val feedName = "feedname"
  final val DATALOADER = "DataLoaderType"
  final val ParquetLocation = "ParquetOutputPath"
/* final val DQMETRICSPATH = "DQMetricsOutputPath"*/
  final val STGTBLLOCATION = "StgTblLocation"
  final val StatsicsOutput="DQMetricsOutputPath"
  final val HEADER = "ExpectedHeader"
  final val NULLCHECKCOLS = "NULLCHECKCOLS"
  final val CHECKNUMERICCOLS = "intColumnName"
  final val DATECHECKCOLS = "DateColumnName"
  // final val UniqueCheckCols="Uniqueness"
  final val NONNUMERIC = "NumericColumns"
  final val VALIDDATECHECKCOLS = "ValidCurrentDateColumns"
  final val VALID_VALUES1 = "0"
  final val VALID_VALUES2 = "1"
  final val VALIDCHECKCLOUMNS = "ValidValues"
  final val NON_NUMERIC = "Non-NumericColumns"
// final val VALIDCURRENTDATECOLS = "ValidCurrentDateColumns"
  //final val ValidValuescheckColumns = "ValidValues"
   final val FINALRECORDOUTPUTLOCATION="FINALRECORDOUTPUTLOCATION"
  /*  final val PATIENTLOOKUPs = "PATIENTLOOKUPs"*/
  final val LOOKUPFILELOCATION = "LookUpFileLocation"
  final val DUPLICATECHECKCOLS= "DuplicateColumns"
  final val InvalidValue ="InvalidValues"
  //final val MAPPINGROW="MappingRow"
  final val SCHEMA = "Schema"
  final val epsilon = "Epsilon"
  //final val SchemaType = "SchemaType"
// final val FileSchema = "FileSchema"
  final val PATIENTLOOKUP="LookUpCheckFlag"
   final val Lengthofcolumn ="Lengthofcolumn"
  final val Lookupcols="LookupColumns"
  final val DATERANGE= "DATERANGE"
  final val AuditfileLocation="AuditfileLocation"
  final val DELETIONFLAG = "deletionflag"
  final val FEEDMETADATALOC = "FeedMetadataLoc"
  final val PartialFromDate ="PartialFromDate"
  final val PartialtoDate="PartialtoDate"
  final val loadtype="loadType"
}
